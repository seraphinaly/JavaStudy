/* 프로그램(저장된 데이터 + 명령문)
 * 변수 → 배열 → 클래스 → 파일 → 데이터베이스
 * =================================================
 * 명령문 → 메소드(한 개의 기능) → 클래스 → 패키지 → .jar(라이브러리)
 * 메소드: 특정작업을 수행하기 위한 컴퓨터 명령문의 집합
 * 		  → 한 가지 일만 수행
 * 		  → 세분화 작업 → 재사용성,중복코드 제거 목적(import)
 * 		- 종류:	┌ 사용자 정의 메소드
 * 		     	│ :반환형 메소드명(매개변수){
 * 				│    return값; → 값=반환형
 * 				│    반환형 없는 경우 → void, return 생략가능
 * 				│  }
 * 				│ 메소드 안에서 처리 	┌ 출력(일반 도스)
 * 				│ 			  	└ 결과값 전송(웹, 윈도우)
 * 				│ 호출)메소드명(값,값): 값을 넘겨주면 메소드가 처리해서 결과값 돌려줌
 * 				│ 	   메소드 수행종료(return)되면 호출된 위치로 돌아옴!!
 * 				│    
 * 			   	└ 라이브러리 메소드
 * 		- 사용법: 구조화(단락(기능))
 * 		- 실행형식: 메소드 종료 → 다른문장 수행
 * 			1)목록 출력
 * 			2)찾기(검색)
 * 			3)수정
 *			4)삭제
 * 			5)추가
 *			6)상세보기
 * 
 * 		  예)숫자 야구게임
 * 			3자리 정수의 난수 발생
 * 			사용자에게 입력 요청
 * 			난수와 사용자 입력값 비교
 * 			힌트
 * 			정답일 경우 종료
 * 			다시 게임을 할지 여부 확인
 */
public class 자바메소드1{
	static void aaa() {
		System.out.println("aaa() 호출시작..."); //1
		bbb(); //bbb() 이동
		System.out.println("aaa() 호출종료..."); //8
	}
	static void bbb() {
		System.out.println("bbb() 호출시작..."); //2
		ccc();
		System.out.println("bbb() 호출종료..."); //7
	}
	static void ccc() {
		System.out.println("ccc() 호출시작..."); //3
		ddd(); 
		System.out.println("ccc() 호출종료..."); //6
	}
	static void ddd() {
		System.out.println("ddd() 호출시작..."); //4
		System.out.println("ddd() 호출종료..."); //5
	}
	
	public static void main(String[] args){
		aaa(); //시작점만 호출

	}

}
