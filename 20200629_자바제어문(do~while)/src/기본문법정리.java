
public class 기본문법정리{
/* 1.변수: 한 가지 데이터를 저장하는 공간
 *        식별자(변수 명명법)=> 메소드, 클래스 적용
 *          1)알파벳, 한글로 시작(단, 알파벳은 대소문자 구분)
 *          2)숫자 사용 가능(맨 앞에 사용금지)
 *          3)특수문자는 _와 $만 사용가능
 *          4)키워드(예약어) 사용금지
 *          5)글자수는 제한은 없으나 보통 3~7자 사용
 *          6)헝거리언식 표기법 
 *            변수: fileName, fileSize
 *        ===================================== 메모리 주소의 별칭(저장된 위치 확인)
 *          ***중복되면 안됨!
 *          ***지역변수: 반드시 초기값 설정! 
 *               사용범위: {} 안에서만 사용가능(끝나면 자동소멸)
 *               선언방식: 데이터형 변수명=값;       
 *            
 * 2.데이터형
 *     ===============================================================
 *           1byte(8bit)  2byte(16bit)  4byte(32bit)  8byte(64bit)
 *     ===============================================================
 *     정수          byte          short          [int]       long(l)
 *           -128~127        ~3만 2천	       ~21억 4천
 *     ===============================================================
 *     실수                                                                   float(f)     [double]
 *     ===============================================================
 *     문자                                       char
 *                           0~65535(unicode)
 *     ===============================================================
 *     논리        boolean
 *     ===============================================================
 *     참조                                                                      String
 *     ===============================================================
 * 
 * 3.연산자
 *   1)단항연산자
 *     -증감연산자(++,--): 무조건 1개 증가 혹은 감소 =>제어문에서 주로 사용 
 *                      a++: 연산 수행 후 증가
 *                      ++a: 증가 후 연산 수행 
 *     -부정연산자(!)=> 조건문에서 주로 사용
 *     -형변환연산자 ((type)): 프로그램에서 연산처리시 같은 데이터형만 연산 가능
 *                        =>자동 형변환(작은→큰)/강제 형변환(큰→작은 데이터)
 *   2)이항연산자
 *     -산술연산자(+,-,*,/,%)=> 기본 처리(단독)
 *      => / (정수/정수=정수)
 *      => % (부호는 항상 왼쪽 따라감)
 *      => int 이하 데이터형은 연산시  int로 전환('A'+'B'=>char(x)=>131)
 *     -비교연산자(==,!=,<,>,<=,>=): boolean
 *              *** 같다=> == : 정수, 실수, 논리, 문자
 *                        equals(): 문자열
 *     -논리연산자(&&,||) : '효율적인 연산' 수행(조건 만족시 두번째 조건 연산 X)
 *                                        조건: &&=> 첫번째 조건 false
 *                                             ||=> 첫번째 조건 true            
 *	   -대입연산자(=,+=,-=): 연산결과를 메모리에 저장
 *                     	
 *   3)삼항연산자(조건(boolean)?값1(true):값2(false))
 *   
 *   
 * 4.제어문
 *   1)조건문
 *     - if: 단일조건문(게시물 new)=> 조건이 true일 경우 처리(false: 점프)
 *     - if~else: 선택조건문(가장 많이 등장, 댓글 게시물(2) )=> 둘 중 하나 수행
 *     - if~else if~else if~else: 다중조건문(web,mobile)=> 여러 조건 중 true나 default(else) 하나만 수행
 *     			  	
 *   2)선택문(=다중조건문, 조건이 5개 이상이면 주로 사용. 게임 및 네트워크) 
 *     switch(문자,정수,문자열){
 *     	case 문자:
 *           실행문장
 *           break; :수행후 종료
 *     	case 문자:
 *           실행문장
 *           break; :수행후 종료
 *             (...)
 *     	default:
 *           실행문장   :문자가 없는 경우
 *     }     
 *     
 *   3)반복문
 *     -for => 2차 for문=> 향상된 for(for~each):횟수 지정(배열)
 *             for(int i=1; i<=10; i++) {
 *                  ①초기값    ②조건식  ④증감식 
 *                  System.out.println(i)} : 1~10까지 출력
 *                 	③반복 실행문장       ***1→(2→3→4) 2번이 false면 종료
 *                                   루프변수(i)=>초기값, 증가시켜서 조건이 false가 되면 종료
 *     
 *     -while: 횟수 지정 X=> 데이터베이스, 파일
 *           초기값               int i=1;
 *           while(조건식) while(i<=10){
 *           반복 실행문장          System.out.println(i)
 *           증감식   		    i++
 *             			  }
 *     
 *     -do~while  
 *     		 초기값               int i=1;
 *           do{         do{
 *           반복 실행문장          System.out.println(i)
 *           증감식   		    i++
 *           while(조건식) }while(i<=10)
 *   
 *   4)반복제어문=> 조건문을 동반
 *     -break: 반복문 종료
 *     	for(int i=1;i<=10;i++){
 *      	if(i==5) break;
 *      }
 *     
 *     -continue: 특정 부분을 제외
 *      for(int i=1;i<=10;i++){
 *       	if(i==5) continue; ==> i++이동 => 6
 *      }
 *     
 *   ***while=>continue: 조건식으로 이동(처음부터 실행)
 *      for=>continue: 제외=> 증가식
 *   ***이중for문
 *      for(초기값; 조건식; 증가식){      //줄 수
 *      	for(초기값; 조건식; 증가식){  //한 줄에 무엇을 출력할지 여부
 *             ==>실제 출력 내용
 *          }
 *      	System.out.println();    //다음 줄에 내려줌  
 *      }   
 *   
 * =====================================================================
 * 
 * 5. 데이터를 묶어서 사용=> 배열, 클래스
 * 6. 명령문을 묶어서 사용=> 메소드
 * 
 * =====================================================================
 * 
 * 7. 데이터+명령문 ==> 객체지향 프로그램
 * 8. 종료하지 않는 프로그램 제작=> 예외처리
 * 9. 자바에서 제공하는 기능
 * 10.자바에서 제공하는 기능
 * 11.조립(사용자 정의+라이브러리)
 */
	public static void main(String[] args){


	}

}
